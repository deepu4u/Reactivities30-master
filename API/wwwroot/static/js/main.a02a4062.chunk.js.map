{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","app/common/form/ErrorMessage.tsx","features/user/SocialLogin.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/models/activity.ts","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/form/DateInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileDescription.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","originalRequest","message","toast","status","data","history","push","url","endsWith","removeItem","info","_retry","post","then","res","setItem","refreshToken","common","method","errors","hasOwnProperty","responseBody","requests","get","body","put","delete","file","formData","FormData","append","Activities","list","params","details","id","create","activity","update","attend","unattend","User","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile","follow","unfollow","listFollowings","predicate","listActivities","setActivityProps","date","Date","isGoing","attendees","some","a","isHost","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","checkTokenAndRefreshIfExpired","decodedToken","jwt","decode","now","exp","agent","getActivity","activityRegistry","this","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getTime","Object","entries","reduce","toISOString","split","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","set","computed","activityId","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","configureLogging","LogLevel","Information","build","start","console","log","state","invoke","catch","on","comment","runInAction","comments","stop","err","loadingInitial","axiosParams","activitiesEnvelope","userStore","toJS","submitting","attendee","event","target","currentTarget","name","loading","filter","UserStore","commonStore","setToken","setRefreshToken","modalStore","closeModal","CommonStore","appLoaded","ModalStore","shallow","open","content","modal","ProfileStore","activeTab","loadFollowings","followings","loadingActivities","userActivities","activeIndex","loadingProfile","uploadingPhoto","photos","isMain","find","following","followersCount","profiles","configure","enforceActions","RootStoreContext","createContext","activityStore","profileStore","observer","useContext","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendees","List","horizontal","map","Popup","trigger","size","circular","bordered","ActivityListItem","host","x","Segment","Group","marginBottom","Content","Header","title","Description","Label","basic","color","Icon","format","venue","city","secondary","clearing","description","floated","activitiesByDate","group","divided","setPredicate","vertical","width","marginTop","attached","active","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","setPage","totalPages","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","hasMore","initialLoad","Loader","TextInput","input","type","placeholder","meta","touched","Form","Field","ErrorMessage","Message","statusText","length","flat","i","fbCallback","appId","fields","callback","render","renderProps","validate","combineValidators","email","isRequired","password","onSubmit","FORM_ERROR","handleSubmit","submitError","invalid","pristine","dirtySinceLastSubmit","textAlign","component","Divider","RegisterForm","HomePage","isLoggedIn","openModal","className","ActivityFormValues","init","category","time","assign","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","rest","onBlur","onKeyDown","preventDefault","composeValidators","hasLengthGreaterThan","match","createActivity","editActivity","loadActivity","setActivity","setLoading","finally","initialValues","dateAndTime","dateString","timeString","combineDateAndTime","newActivity","uuid","widths","LoadingComponent","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","height","attendActivity","cancelAttendance","padding","ActivityDetailedInfo","verticalAlign","createHubConnection","stopHubConnection","addComment","border","Comment","Avatar","Author","Metadata","formatDistance","createdAt","Text","form","reset","labelPosition","primary","relaxed","ribbon","Extra","NotFound","Inline","Modal","onClose","isCurrentUser","Statistic","label","followingCount","Reveal","animated","visible","hidden","dropzoneStyles","borderRadius","paddingTop","dropzoneActive","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","files","revokeObjectURL","sub","overflow","addPhotoMode","setAddPhotoMode","setTarget","deleteTarget","setDeleteTarget","Tab","Pane","paddingBottom","Card","itemsPerRow","negative","bio","editMode","setEditMode","ProfileCard","extra","ProfileFollowings","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileContent","setActiveTab","menuPosition","loadProfile","Component","props","withRouter","location","setAppLoaded","getUser","path","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","Boolean","hostname","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a02a4062.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { IActivity, IActivitiesEnvelope } from '../models/activity';\nimport { history } from '../..';\nimport { toast } from 'react-toastify';\nimport { IUser, IUserFormValues } from '../models/user';\nimport { IProfile, IPhoto } from '../models/profile';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(\n  config => {\n    const token = window.localStorage.getItem('jwt');\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(undefined, error => {\n  const originalRequest = error.config;\n  if (error.message === 'Network Error' && !error.response) {\n    toast.error('Network error - make sure API is running!');\n  }\n  const { status, data, config } = error.response;\n  if (status === 404) {\n    history.push('/notfound');\n  }\n  if (status === 401 && originalRequest.url.endsWith('refresh')) {\n    window.localStorage.removeItem('jwt');\n    window.localStorage.removeItem('refreshToken');\n    history.push('/')\n    toast.info('Your session has expired, please login again');\n    return Promise.reject(error);\n  }\n  if (status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    return axios.post('user/refresh', {\n      'token': window.localStorage.getItem('jwt'),\n      'refreshToken': window.localStorage.getItem('refreshToken')\n    }).then(res => {\n        window.localStorage.setItem('jwt', res.data.token);\n        window.localStorage.setItem('refreshToken', res.data.refreshToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.token}`;\n        return axios(originalRequest);\n    })\n  }\n  if (\n    status === 400 &&\n    config.method === 'get' &&\n    data.errors.hasOwnProperty('id')\n  ) {\n    history.push('/notfound');\n  }\n  if (status === 500) {\n    toast.error('Server error - check the terminal for more info!');\n  }\n  throw error.response;\n});\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\nconst requests = {\n  get: (url: string) =>\n    axios\n      .get(url)\n      .then(responseBody),\n  post: (url: string, body: {}) =>\n    axios\n      .post(url, body)\n      .then(responseBody),\n  put: (url: string, body: {}) =>\n    axios\n      .put(url, body)\n      .then(responseBody),\n  del: (url: string) =>\n    axios\n      .delete(url)\n      .then(responseBody),\n  postForm: (url: string, file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios\n      .post(url, formData, {\n        headers: { 'Content-type': 'multipart/form-data' }\n      })\n      .then(responseBody);\n  }\n};\n\nconst Activities = {\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> =>\n    axios.get('/activities', {params: params}).then(responseBody),\n  details: (id: string) => requests.get(`/activities/${id}`),\n  create: (activity: IActivity) => requests.post('/activities', activity),\n  update: (activity: IActivity) =>\n    requests.put(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del(`/activities/${id}`),\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`)\n};\n\nconst User = {\n  current: (): Promise<IUser> => requests.get('/user'),\n  login: (user: IUserFormValues): Promise<IUser> =>\n    requests.post(`/user/login`, user),\n  register: (user: IUserFormValues): Promise<IUser> =>\n    requests.post(`/user/register`, user),\n  fbLogin: (accessToken: string) =>\n    requests.post(`/user/facebook`, {accessToken}),\n  refreshToken: (token: string, refreshToken: string) => {\n    return axios.post(`/user/refresh`, {token, refreshToken})\n      .then(res => {\n        window.localStorage.setItem('jwt', res.data.token);\n        window.localStorage.setItem('refreshToken', res.data.refreshToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.token}`;\n        return res.data.token;\n      })\n  }\n};\n\nconst Profiles = {\n  get: (username: string): Promise<IProfile> =>\n    requests.get(`/profiles/${username}`),\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\n    requests.postForm(`/photos`, photo),\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<IProfile>) =>\n    requests.put(`/profiles`, profile),\n  follow: (username: string) =>\n    requests.post(`/profiles/${username}/follow`, {}),\n  unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get(`/profiles/${username}/activities?predicate=${predicate}`)\n};\n\nexport default {\n  Activities,\n  User,\n  Profiles\n};\n","import { IActivity, IAttendee } from \"../../models/activity\";\nimport { IUser } from \"../../models/user\";\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n    // const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\n\n    // const year = date.getFullYear();\n    // const month = date.getMonth() + 1;\n    // const day = date.getDate();\n    // const dateString = `${year}-${month}-${day}`;\n\n    const dateString = date.toISOString().split('T')[0];\n    const timeString = time.toISOString().split('T')[1];\n\n    return new Date(dateString + 'T' + timeString);\n}\n\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\n    activity.date = new Date(activity.date);\n    activity.isGoing = activity.attendees.some(\n      a => a.username === user.username\n    )\n    activity.isHost = activity.attendees.some(\n      a => a.username === user.username && a.isHost\n    )\n    return activity;\n}\n\nexport const createAttendee = (user: IUser): IAttendee => {\n    return {\n        displayName: user.displayName,\n        isHost: false,\n        username: user.username,\n        image: user.image!\n    }\n}","import { observable, action, computed, runInAction, reaction, toJS } from 'mobx';\nimport { SyntheticEvent } from 'react';\nimport { IActivity } from '../models/activity';\nimport agent from '../api/agent';\nimport { history } from '../..';\nimport { toast } from 'react-toastify';\nimport { RootStore } from './rootStore';\nimport { setActivityProps, createAttendee } from '../common/util/util';\nimport {HubConnection, HubConnectionBuilder, LogLevel} from '@microsoft/signalr';\nimport jwt from 'jsonwebtoken';\n\nconst LIMIT = 2;\n\nexport default class ActivityStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.page = 0;\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  @observable activityRegistry = new Map();\n  @observable activity: IActivity | null = null;\n  @observable loadingInitial = false;\n  @observable submitting = false;\n  @observable target = '';\n  @observable loading = false;\n  @observable.ref hubConnection: HubConnection | null = null;\n  @observable activityCount = 0;\n  @observable page = 0;\n  @observable predicate = new Map();\n\n  @action setPredicate = (predicate: string, value: string | Date) => {\n    this.predicate.clear();\n    if (predicate !== 'all') {\n      this.predicate.set(predicate, value);\n    }\n  }\n\n  @computed get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('limit', String(LIMIT));\n    params.append('offset', `${this.page ? this.page * LIMIT : 0}`);\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, value.toISOString())\n      } else {\n        params.append(key, value)\n      }\n    })\n    return params;\n  }\n\n  @computed get totalPages() {\n    return Math.ceil(this.activityCount / LIMIT);\n  }\n\n  @action setPage = (page: number) => {\n    this.page = page;\n  }\n\n  @action createHubConnection = (activityId: string) => {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\n        accessTokenFactory: () => this.checkTokenAndRefreshIfExpired()\n      })\n      .configureLogging(LogLevel.Information)\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log(this.hubConnection!.state))\n      .then(() => {\n        if (this.hubConnection!.state === 'Connected') {\n          this.hubConnection!.invoke('AddToGroup', activityId);\n        }\n      })\n      .catch(error => console.log('Error establishing connection: ', error));\n\n    this.hubConnection.on('ReceiveComment', comment => {\n      runInAction(() => {\n        this.activity!.comments.push(comment)\n      })\n    })\n\n    this.hubConnection.on('Send', message => {\n      toast.info(message);\n    })\n  };\n\n  checkTokenAndRefreshIfExpired = async () => {\n    const token = localStorage.getItem('jwt');\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (token && refreshToken) {\n      const decodedToken: any = jwt.decode(token);\n      if (decodedToken && Date.now() >= decodedToken.exp * 1000 - 5000) {\n        try {\n          return await agent.User.refreshToken(token, refreshToken);\n        } catch (error) {\n          toast.error('Problem connecting to the chat');\n        }\n      } else {\n        return token;\n      }\n    }\n  }\n\n  @action stopHubConnection = () => {\n    this.hubConnection!.invoke('RemoveFromGroup', this.activity!.id)\n      .then(() => {\n        this.hubConnection!.stop()\n      })\n      .then(() => console.log('Connection stopped'))\n      .catch(err => console.log(err))\n  }\n\n  @action addComment = async (values: any) => {\n    values.activityId = this.activity!.id;\n    try {\n      await this.hubConnection!.invoke('SendComment', values)\n    } catch (error) {\n      console.log(error);\n    }\n  } \n\n\n  @computed get activitiesByDate() {\n    return this.groupActivitiesByDate(\n      Array.from(this.activityRegistry.values())\n    );\n  }\n\n  groupActivitiesByDate(activities: IActivity[]) {\n    const sortedActivities = activities.sort(\n      (a, b) => a.date.getTime() - b.date.getTime()\n    );\n    return Object.entries(\n      sortedActivities.reduce(\n        (activities, activity) => {\n          const date = activity.date.toISOString().split('T')[0];\n          activities[date] = activities[date]\n            ? [...activities[date], activity]\n            : [activity];\n          return activities;\n        },\n        {} as { [key: string]: IActivity[] }\n      )\n    );\n  }\n\n  @action loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\n      const {activities, activityCount} = activitiesEnvelope;\n      runInAction('loading activities', () => {\n        activities.forEach(activity => {\n          setActivityProps(activity, this.rootStore.userStore.user!);\n          this.activityRegistry.set(activity.id, activity);\n        });\n        this.activityCount = activityCount;\n        this.loadingInitial = false;\n      });\n    } catch (error) {\n      runInAction('load activities error', () => {\n        this.loadingInitial = false;\n      });\n    }\n  };\n\n  @action loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.activity = activity;\n      return toJS(activity);\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        runInAction('getting activity', () => {\n          setActivityProps(activity, this.rootStore.userStore.user!);\n          this.activity = activity;\n          this.activityRegistry.set(activity.id, activity);\n          this.loadingInitial = false;\n        });\n        return activity;\n      } catch (error) {\n        runInAction('get activity error', () => {\n          this.loadingInitial = false;\n        });\n        console.log(error);\n      }\n    }\n  };\n\n  @action clearActivity = () => {\n    this.activity = null;\n  };\n\n  getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  @action createActivity = async (activity: IActivity) => {\n    this.submitting = true;\n    try {\n      await agent.Activities.create(activity);\n      const attendee = createAttendee(this.rootStore.userStore.user!);\n      attendee.isHost = true;\n      let attendees = [];\n      attendees.push(attendee);\n      activity.attendees = attendees;\n      activity.isHost = true;\n      runInAction('create activity', () => {\n        this.activityRegistry.set(activity.id, activity);\n        this.submitting = false;\n      });\n      history.push(`/activities/${activity.id}`);\n    } catch (error) {\n      runInAction('create activity error', () => {\n        this.submitting = false;\n      });\n      toast.error('Problem submitting data');\n      console.log(error.response);\n    }\n  };\n\n  @action editActivity = async (activity: IActivity) => {\n    this.submitting = true;\n    try {\n      await agent.Activities.update(activity);\n      runInAction('editing activity', () => {\n        this.activityRegistry.set(activity.id, activity);\n        this.activity = activity;\n        this.submitting = false;\n      });\n      history.push(`/activities/${activity.id}`);\n    } catch (error) {\n      runInAction('edit activity error', () => {\n        this.submitting = false;\n      });\n      toast.error('Problem submitting data');\n      console.log(error);\n    }\n  };\n\n  @action deleteActivity = async (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    this.submitting = true;\n    this.target = event.currentTarget.name;\n    try {\n      await agent.Activities.delete(id);\n      runInAction('deleting activity', () => {\n        this.activityRegistry.delete(id);\n        this.submitting = false;\n        this.target = '';\n      });\n    } catch (error) {\n      runInAction('delete activity error', () => {\n        this.submitting = false;\n        this.target = '';\n      });\n      console.log(error);\n    }\n  };\n\n  @action attendActivity = async () => {\n    const attendee = createAttendee(this.rootStore.userStore.user!);\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.activity!.id);\n      runInAction(() => {\n        if (this.activity) {\n          this.activity.attendees.push(attendee);\n          this.activity.isGoing = true;\n          this.activityRegistry.set(this.activity.id, this.activity);\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(() => {\n        this.loading = false;\n      })\n      toast.error('Problem signing up to activity');\n    }\n  };\n\n  @action cancelAttendance = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.unattend(this.activity!.id);\n      runInAction(() => {\n        if (this.activity) {\n          this.activity.attendees = this.activity.attendees.filter(\n            a => a.username !== this.rootStore.userStore.user!.username\n          );\n          this.activity.isGoing = false;\n          this.activityRegistry.set(this.activity.id, this.activity);\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(() => {\n        this.loading = false;\n      })\n      toast.error('Problem cancelling attendance');\n    }\n  };\n}\n","import { observable, computed, action, runInAction } from 'mobx';\nimport { IUser, IUserFormValues } from '../models/user';\nimport agent from '../api/agent';\nimport { RootStore } from './rootStore';\nimport { history } from '../..';\n\nexport default class UserStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable user: IUser | null = null;\n  @observable loading = false;\n\n  @computed get isLoggedIn() {\n    return !!this.user;\n  }\n\n  @action login = async (values: IUserFormValues) => {\n    try {\n      const user = await agent.User.login(values);\n      runInAction(() => {\n        this.user = user;\n      });\n      this.rootStore.commonStore.setToken(user.token);\n      this.rootStore.commonStore.setRefreshToken(user.refreshToken);\n      this.rootStore.modalStore.closeModal();\n      history.push('/activities');\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  @action register = async (values: IUserFormValues) => {\n    try {\n      const user = await agent.User.register(values);\n      this.rootStore.commonStore.setToken(user.token);\n      this.rootStore.commonStore.setRefreshToken(user.refreshToken);\n      this.rootStore.modalStore.closeModal();\n      history.push('/activities')\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @action getUser = async () => {\n    try {\n      const user = await agent.User.current();\n      runInAction(() => {\n        this.user = user;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  @action logout = () => {\n    this.rootStore.commonStore.setToken(null);\n    this.user = null;\n    history.push('/');\n  };\n\n  @action fbLogin = async (response: any) => {\n    this.loading = true;\n    try {\n      const user = await agent.User.fbLogin(response.accessToken);\n      runInAction(() => {\n        this.user = user;\n        this.rootStore.commonStore.setToken(user.token);\n        this.rootStore.commonStore.setRefreshToken(user.refreshToken);\n        this.rootStore.modalStore.closeModal();\n        this.loading = false;\n      })\n      history.push('/activities');\n    } catch (error) {\n      this.loading = false;\n      throw error;\n    }\n  }\n}\n","import {RootStore} from './rootStore';\nimport { observable, action, reaction } from 'mobx';\n\nexport default class CommonStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n\n        reaction(\n            () => this.refreshToken,\n            refreshToken => {\n                if (refreshToken) {\n                    window.localStorage.setItem('refreshToken', refreshToken);\n                } else {\n                    window.localStorage.removeItem('refreshToken');\n                }\n            }\n        )\n    }\n\n    @observable token: string | null = window.localStorage.getItem('jwt');\n    @observable refreshToken: string | null = window.localStorage.getItem('refreshToken');\n    @observable appLoaded = false;\n\n    @action setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    @action setRefreshToken = (refreshToken: string | null) => {\n        this.refreshToken = refreshToken;\n    }\n\n    @action setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { RootStore } from \"./rootStore\";\nimport { observable, action } from \"mobx\";\n\nexport default class ModalStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @observable.shallow modal = {\n        open: false,\n        body: null\n    }\n    \n    @action openModal = (content: any) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    @action closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { RootStore } from './rootStore';\nimport { observable, action, runInAction, computed, reaction } from 'mobx';\nimport { IProfile, IPhoto, IUserActivity } from '../models/profile';\nimport agent from '../api/agent';\nimport { toast } from 'react-toastify';\n\nexport default class ProfileStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(\n        () => this.activeTab,\n        activeTab => {\n            if (activeTab === 3 || activeTab === 4) {\n                const predicate = activeTab === 3 ? 'followers' : 'following';\n                this.loadFollowings(predicate)\n            } else {\n                this.followings = [];\n            }\n        }\n    )\n  }\n\n  @observable profile: IProfile | null = null;\n  @observable loadingProfile = true;\n  @observable uploadingPhoto = false;\n  @observable loading = false;\n  @observable followings: IProfile[] = [];\n  @observable activeTab: number = 0;\n  @observable userActivities: IUserActivity[] = [];\n  @observable loadingActivities = false;\n\n  @computed get isCurrentUser() {\n    if (this.rootStore.userStore.user && this.profile) {\n      return this.rootStore.userStore.user.username === this.profile.username;\n    } else {\n      return false;\n    }\n  }\n\n  @action loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      toast.error('Problem loading activities')\n      runInAction(() => {\n        this.loadingActivities = false;\n      })\n    }\n  }\n\n  @action setActiveTab = (activeIndex: number) => {\n      this.activeTab = activeIndex;\n  } \n\n  @action loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loadingProfile = false;\n      });\n      console.log(error);\n    }\n  };\n\n  @action uploadPhoto = async (file: Blob) => {\n    this.uploadingPhoto = true;\n    try {\n      const photo = await agent.Profiles.uploadPhoto(file);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos.push(photo);\n          if (photo.isMain && this.rootStore.userStore.user) {\n            this.rootStore.userStore.user.image = photo.url;\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploadingPhoto = false;\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('Problem uploading photo');\n      runInAction(() => {\n        this.uploadingPhoto = false;\n      });\n    }\n  };\n\n  @action setMainPhoto = async (photo: IPhoto) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      runInAction(() => {\n        this.rootStore.userStore.user!.image = photo.url;\n        this.profile!.photos.find(a => a.isMain)!.isMain = false;\n        this.profile!.photos.find(a => a.id === photo.id)!.isMain = true;\n        this.profile!.image = photo.url;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem setting photo as main');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action deletePhoto = async (photo: IPhoto) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        this.profile!.photos = this.profile!.photos.filter(\n          a => a.id !== photo.id\n        );\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem deleting the photo');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action updateProfile = async (profile: Partial<IProfile>) => {\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (\n          profile.displayName !== this.rootStore.userStore.user!.displayName\n        ) {\n          this.rootStore.userStore.user!.displayName = profile.displayName!;\n        }\n        this.profile = { ...this.profile!, ...profile };\n      });\n    } catch (error) {\n      toast.error('Problem updating profile');\n    }\n  };\n\n  @action follow = async (username: string) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.follow(username);\n      runInAction(() => {\n        this.profile!.following = true;\n        this.profile!.followersCount++;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem following user');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action unfollow = async (username: string) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.unfollow(username);\n      runInAction(() => {\n        this.profile!.following = false;\n        this.profile!.followersCount--;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem unfollowing user');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action loadFollowings = async (predicate: string) => {\n    this.loading = true;\n    try {\n      const profiles = await agent.Profiles.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n          this.followings = profiles;\n          this.loading = false;\n      })\n    } catch (error) {\n      toast.error('Problem loading followings');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n}\n","import ActivityStore from './activityStore';\nimport UserStore from './userStore';\nimport { createContext } from 'react';\nimport { configure } from 'mobx';\nimport CommonStore from './commonStore';\nimport ModalStore from './modalStore';\nimport ProfileStore from './profileStore';\n\nconfigure({enforceActions: 'always'});\n\nexport class RootStore {\n    activityStore: ActivityStore;\n    userStore: UserStore;\n    commonStore: CommonStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n\n    constructor() {\n        this.activityStore = new ActivityStore(this);\n        this.userStore = new UserStore(this);\n        this.commonStore = new CommonStore(this);\n        this.modalStore = new ModalStore(this);\n        this.profileStore = new ProfileStore(this);\n    }\n}\n\nexport const RootStoreContext = createContext(new RootStore());","import React, { useContext } from 'react';\nimport { Menu, Container, Button, Dropdown, Image } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { NavLink, Link } from 'react-router-dom';\nimport { RootStoreContext } from '../../app/stores/rootStore';\n\nconst NavBar: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { user, logout } = rootStore.userStore;\n  return (\n    <Menu fixed='top' inverted>\n      <Container>\n        <Menu.Item header as={NavLink} exact to='/'>\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item name='Activities' as={NavLink} to='/activities' />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to='/createActivity'\n            positive\n            content='Create Activity'\n          />\n        </Menu.Item>\n        {user && (\n          <Menu.Item position='right'>\n            <Image avatar spaced='right' src={user.image || '/assets/user.png'} />\n            <Dropdown pointing='top left' text={user.displayName}>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  as={Link}\n                  to={`/profile/${user.username}`}\n                  text='My profile'\n                  icon='user'\n                />\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n        )}\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","import React from 'react';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { IAttendee } from '../../../app/models/activity';\n\ninterface IProps {\n  attendees: IAttendee[];\n}\n\nconst styles = {\n  borderColor: 'orange',\n  borderWidth: 2\n}\n\nconst ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\n  return (\n    <List horizontal>\n      {attendees.map(attendee => (\n        <List.Item key={attendee.username}>\n          <Popup\n            header={attendee.displayName}\n            trigger={\n              <Image\n                size='mini'\n                circular\n                src={attendee.image || '/assets/user.png'}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            }\n          />\n        </List.Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ActivityListItemAttendees;\n","import React from 'react';\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IActivity } from '../../../app/models/activity';\nimport { format } from 'date-fns';\nimport ActivityListItemAttendees from './ActivityListItemAttendees';\n\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              size='tiny'\n              circular\n              src={host.image || '/assets/user.png'}\n              style={{ marginBottom: 3 }}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by\n                <Link to={`/profile/${host.username}`}> {host.displayName}</Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color='orange'\n                    content='You are hosting this activity'\n                  />\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color='green'\n                    content='You are going to this activity'\n                  />\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <Icon name='clock' /> {format(activity.date, 'h:mm a')}\n        <Icon name='marker' /> {activity.venue}, {activity.city}\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendees attendees={activity.attendees} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          floated='right'\n          content='View'\n          color='blue'\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n","import React, { useContext, Fragment } from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport ActivityListItem from './ActivityListItem';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport {format} from 'date-fns';\n\nconst ActivityList: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { activitiesByDate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      {activitiesByDate.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Label size='large' color='blue'>\n            {format(group, 'eeee do MMMM')}\n          </Label>\n          <Item.Group divided>\n            {activities.map(activity => (\n              <ActivityListItem key={activity.id} activity={activity} />\n            ))}\n          </Item.Group>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityList);\n","import React, { Fragment, useContext } from 'react';\nimport { Menu, Header } from 'semantic-ui-react';\nimport { Calendar } from 'react-widgets';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ActivityFilters = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { predicate, setPredicate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\n        <Header icon={'filter'} attached color={'teal'} content={'Filters'} />\n        <Menu.Item\n          active={predicate.size === 0}\n          onClick={() => setPredicate('all', 'true')}\n          color={'blue'}\n          name={'all'}\n          content={'All Activities'}\n        />\n        <Menu.Item\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n          color={'blue'}\n          name={'username'}\n          content={\"I'm Going\"}\n        />\n        <Menu.Item\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n          color={'blue'}\n          name={'host'}\n          content={\"I'm hosting\"}\n        />\n      </Menu>\n      <Header\n        icon={'calendar'}\n        attached\n        color={'teal'}\n        content={'Select Date'}\n      />\n      <Calendar\n        onChange={date => setPredicate('startDate', date!)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\nconst ActivityListItemPlaceholder = () => {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 50 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n};\nexport default ActivityListItemPlaceholder;","import React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport ActivityList from './ActivityList';\nimport { observer } from 'mobx-react-lite';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityFilters from './ActivityFilters';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nconst ActivityDashboard: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadActivities,\n    loadingInitial,\n    setPage,\n    page,\n    totalPages\n  } = rootStore.activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPage(page + 1);\n    loadActivities().then(() => setLoadingNext(false));\n  };\n\n  useEffect(() => {\n    loadActivities();\n  }, [loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        {loadingInitial && page === 0 ? (\n          <ActivityListItemPlaceholder />\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && page + 1 < totalPages}\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLInputElement>,\n    FormFieldProps {}\n\nconst TextInput: React.FC<IProps> = ({\n  input,\n  width,\n  type,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} type={type} width={width}>\n      <input {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { AxiosResponse } from 'axios';\nimport { Message } from 'semantic-ui-react';\n\ninterface IProps {\n  error: AxiosResponse;\n  text?: string;\n}\n\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\n  return (\n    <Message error>\n      <Message.Header>{error.statusText}</Message.Header>\n      {error.data && Object.keys(error.data.errors).length > 0 && (\n        <Message.List>\n          {Object.values(error.data.errors).flat().map((err, i) => (\n            <Message.Item key={i}>{error}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n      {text && <Message.Content content={text} />}\n    </Message>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps {\n    fbCallback: (response: any) => void;\n    loading: boolean;\n}\n\nconst SocialLogin: React.FC<IProps> = ({fbCallback, loading}) => {\n    return (\n        <div>\n            <FacebookLogin \n                appId=\"527841264733284\"\n                fields=\"name,email,picture\"\n                callback={fbCallback}\n                render={(renderProps: any) => {\n                    return (\n                        <Button loading={loading} onClick={renderProps.onClick} type=\"button\" fluid color=\"facebook\">\n                            <Icon name=\"facebook\" />\n                            Login with Facebook\n                        </Button>\n                    )\n                } }\n            />\n        </div>\n    )\n}\n\nexport default observer(SocialLogin)\n","import React, { useContext } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, Button, Header, Divider } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport { IUserFormValues } from '../../app/models/user';\nimport { FORM_ERROR } from 'final-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\nimport SocialLogin from './SocialLogin';\nimport { observer } from 'mobx-react-lite';\n\nconst validate = combineValidators({\n  email: isRequired('Email'),\n  password: isRequired('Password')\n});\n\nconst LoginForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { login, fbLogin, loading } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        login(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as='h2'\n            content='Login to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <Field name='email' component={TextInput} placeholder='Email' />\n          <Field\n            name='password'\n            component={TextInput}\n            placeholder='Password'\n            type='password'\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n              text='Invalid email or password'\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color='teal'\n            content='Login'\n            fluid\n          />\n          <Divider horizontal>Or</Divider>\n          <SocialLogin loading={loading} fbCallback={fbLogin} />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default observer(LoginForm);\n","import React, { useContext } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport { IUserFormValues } from '../../app/models/user';\nimport { FORM_ERROR } from 'final-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\n\nconst validate = combineValidators({\n  username: isRequired('Username'),\n  displayName: isRequired('DisplayName'),\n  email: isRequired('Email'),\n  password: isRequired('Password')\n});\n\nconst RegisterForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { register } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        register(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as='h2'\n            content='Sign up to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <Field name='username' component={TextInput} placeholder='Username' />\n          <Field\n            name='displayName'\n            component={TextInput}\n            placeholder='Display Name'\n          />\n          <Field name='email' component={TextInput} placeholder='Email' />\n          <Field\n            name='password'\n            component={TextInput}\n            placeholder='Password'\n            type='password'\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color='teal'\n            content='Register'\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default RegisterForm;\n","import React, { useContext, Fragment } from 'react';\nimport { Container, Segment, Header, Button, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoginForm from '../user/LoginForm';\nimport RegisterForm from '../user/RegisterForm';\n\nconst HomePage = () => {\n  const token = window.localStorage.getItem('jwt');\n  const rootStore = useContext(RootStoreContext);\n  const { user, isLoggedIn } = rootStore.userStore;\n  const {openModal} = rootStore.modalStore;\n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image\n            size='massive'\n            src='/assets/logo.png'\n            alt='logo'\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {isLoggedIn && user && token ? (\n          <Fragment>\n            <Header as='h2' inverted content={`Welcome back ${user.displayName}`} />\n            <Button as={Link} to='/activities' size='huge' inverted>\n              Go to activities!\n            </Button>\n          </Fragment>\n        ) : (\n          <Fragment>\n          <Header as='h2' inverted content={`Welcome to Reactivitities`} />\n          <Button onClick={() => openModal(<LoginForm />)} size='huge' inverted>\n            Login\n          </Button>\n          <Button onClick={() => openModal(<RegisterForm />)} size='huge' inverted>\n            Register\n          </Button>\n        </Fragment>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default HomePage;\n","export interface IActivitiesEnvelope {\n  activities: IActivity[];\n  activityCount: number;\n}\n\nexport interface IActivity {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  date: Date;\n  city: string;\n  venue: string;\n  isGoing: boolean;\n  isHost: boolean;\n  attendees: IAttendee[];\n  comments: IComment[];\n}\n\nexport interface IComment {\n  id: string;\n  createdAt: Date;\n  body: string;\n  username: string;\n  displayName: string;\n  image: string;\n}\n\nexport interface IActivityFormValues extends Partial<IActivity> {\n  time?: Date;\n}\n\nexport class ActivityFormValues implements IActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date?: Date = undefined;\n  time?: Date = undefined;\n  city: string = '';\n  venue: string = '';\n\n  constructor(init?: IActivityFormValues) {\n    if (init && init.date) {\n      init.time = init.date;\n    }\n    Object.assign(this, init);\n  }\n}\n\nexport interface IAttendee {\n  username: string;\n  displayName: string;\n  image: string;\n  isHost: boolean;\n  following?: boolean;\n}\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLTextAreaElement>,\n    FormFieldProps {}\n\nconst TextAreaInput: React.FC<IProps> = ({\n  input,\n  width,\n  rows,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <textarea rows={rows} {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextAreaInput;\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLSelectElement>,\n    FormFieldProps {}\n\nconst SelectInput: React.FC<IProps> = ({\n    input,\n    width,\n    options,\n    placeholder,\n    meta: { touched, error }\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <Select \n            value={input.value}\n            onChange={(e, data) => input.onChange(data.value)}\n            placeholder={placeholder}\n            options={options}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default SelectInput\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\nimport {DateTimePicker} from 'react-widgets';\n\ninterface IProps\n  extends FieldRenderProps<Date, HTMLInputElement>,\n    FormFieldProps {}\n\nconst DateInput: React.FC<IProps> = ({\n    input,\n    width,\n    placeholder,\n    date = false,\n    time = false,\n    meta: { touched, error },\n    ...rest\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <DateTimePicker \n            placeholder={placeholder}\n            value={input.value || null}\n            onChange={input.onChange}\n            onBlur={input.onBlur}\n            onKeyDown={(e) => e.preventDefault()}\n            date={date}\n            time={time}\n            {...rest}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default DateInput\n","export const category = [\n    { key: 'drinks', text: 'Drinks', value: 'drinks' },\n    { key: 'culture', text: 'Culture', value: 'culture' },\n    { key: 'film', text: 'Film', value: 'film' },\n    { key: 'food', text: 'Food', value: 'food' },\n    { key: 'music', text: 'Music', value: 'music' },\n    { key: 'travel', text: 'Travel', value: 'travel' }\n  ];","import React, { useState, useContext, useEffect } from 'react';\nimport { Segment, Form, Button, Grid } from 'semantic-ui-react';\nimport { ActivityFormValues } from '../../../app/models/activity';\nimport { v4 as uuid } from 'uuid';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport TextInput from '../../../app/common/form/TextInput';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport SelectInput from '../../../app/common/form/SelectInput';\nimport DateInput from '../../../app/common/form/DateInput';\nimport { category } from '../../../app/common/options/categoryOptions';\nimport { combineDateAndTime } from '../../../app/common/util/util';\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan\n} from 'revalidate';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst validate = combineValidators({\n  title: isRequired({ message: 'The event title is required' }),\n  category: isRequired('Category'),\n  description: composeValidators(\n    isRequired('Description'),\n    hasLengthGreaterThan(4)({\n      message: 'Description needs to be at least 5 characters'\n    })\n  )(),\n  city: isRequired('City'),\n  venue: isRequired('Venue'),\n  date: isRequired('Date'),\n  time: isRequired('Time')\n});\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    loadActivity\n  } = rootStore.activityStore;\n\n  const [activity, setActivity] = useState(new ActivityFormValues());\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (match.params.id) {\n      setLoading(true);\n      loadActivity(match.params.id)\n        .then(activity => {\n          setActivity(new ActivityFormValues(activity));\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [loadActivity, match.params.id]);\n\n  const handleFinalFormSubmit = (values: any) => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const { date, time, ...activity } = values;\n    activity.date = dateAndTime;\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            validate={validate}\n            initialValues={activity}\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit, invalid, pristine }) => (\n              <Form onSubmit={handleSubmit} loading={loading}>\n                <Field\n                  name='title'\n                  placeholder='Title'\n                  value={activity.title}\n                  component={TextInput}\n                />\n                <Field\n                  name='description'\n                  placeholder='Description'\n                  rows={3}\n                  value={activity.description}\n                  component={TextAreaInput}\n                />\n                <Field\n                  component={SelectInput}\n                  options={category}\n                  name='category'\n                  placeholder='Category'\n                  value={activity.category}\n                />\n                <Form.Group widths='equal'>\n                  <Field\n                    component={DateInput}\n                    name='date'\n                    date={true}\n                    placeholder='Date'\n                    value={activity.date}\n                  />\n                  <Field\n                    component={DateInput}\n                    name='time'\n                    time={true}\n                    placeholder='Time'\n                    value={activity.time}\n                  />\n                </Form.Group>\n\n                <Field\n                  component={TextInput}\n                  name='city'\n                  placeholder='City'\n                  value={activity.city}\n                />\n                <Field\n                  component={TextInput}\n                  name='venue'\n                  placeholder='Venue'\n                  value={activity.venue}\n                />\n                <Button\n                  loading={submitting}\n                  disabled={loading || invalid || pristine}\n                  floated='right'\n                  positive\n                  type='submit'\n                  content='Submit'\n                />\n                <Button\n                  onClick={\n                    activity.id\n                      ? () => history.push(`/activities/${activity.id}`)\n                      : () => history.push('/activities')\n                  }\n                  disabled={loading}\n                  floated='right'\n                  type='button'\n                  content='Cancel'\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst LoadingComponent: React.FC<{ inverted?: boolean; content?: string }> = ({\n  inverted = true,\n  content\n}) => {\n  return (\n    <Dimmer active inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { useContext } from 'react';\nimport { Segment, Item, Header, Button, Image } from 'semantic-ui-react';\nimport { IActivity } from '../../../app/models/activity';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white'\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity\n}) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  const rootStore = useContext(RootStoreContext);\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\n  return (\n    <Segment.Group>\n      <Segment basic attached='top' style={{ padding: '0' }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size='huge'\n                  content={activity.title}\n                  style={{ color: 'white' }}\n                />\n                <p>{format(activity.date, 'eeee do MMMM')}</p>\n                <p>\n                  Hosted by{' '}\n                  <Link to={`/profile/${host.username}`}>\n                    <strong>{host.displayName}</strong>\n                  </Link>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached='bottom'>\n        {activity.isHost ? (\n          <Button\n            as={Link}\n            to={`/manage/${activity.id}`}\n            color='orange'\n            floated='right'\n          >\n            Manage Event\n          </Button>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={cancelAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button loading={loading} onClick={attendActivity} color='teal'>\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n","import React from 'react';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport { IActivity } from '../../../app/models/activity';\nimport {format} from 'date-fns';\n\nconst ActivityDetailedInfo: React.FC<{activity: IActivity}> = ({activity}) => {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date, 'eeee do MMMM')} at {format(activity.date!, 'h:mm a')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityDetailedInfo;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Segment, Header, Form, Button, Comment } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport {Form as FinalForm, Field} from 'react-final-form';\nimport { Link } from 'react-router-dom';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport { observer } from 'mobx-react-lite';\nimport {formatDistance} from 'date-fns';\n\nconst ActivityDetailedChat = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createHubConnection,\n    stopHubConnection,\n    addComment,\n    activity\n  } = rootStore.activityStore;\n\n  useEffect(() => {\n    createHubConnection(activity!.id);\n    return () => {\n      stopHubConnection();\n    }\n  }, [createHubConnection, stopHubConnection, activity])\n\n  return (\n    <Fragment>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{ border: 'none' }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached>\n        <Comment.Group>\n          {activity && activity.comments && activity.comments.map((comment) => (\n          <Comment key={comment.id}>\n          <Comment.Avatar src={comment.image || '/assets/user.png'} />\n          <Comment.Content>\n            <Comment.Author as={Link} to={`/profile/${comment.username}`}>{comment.displayName}</Comment.Author>\n            <Comment.Metadata>\n              <div>{formatDistance(comment.createdAt, new Date())}</div>\n            </Comment.Metadata>\n            <Comment.Text>{comment.body}</Comment.Text>\n          </Comment.Content>\n        </Comment>\n          ))}\n\n          <FinalForm \n            onSubmit={addComment}\n            render={({handleSubmit, submitting, form}) => (\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\n              <Field \n                name='body'\n                component={TextAreaInput}\n                rows={2}\n                placeholder='Add your comment'\n              />\n              <Button\n                loading={submitting}\n                content='Add Reply'\n                labelPosition='left'\n                icon='edit'\n                primary\n              />\n            </Form>\n            )}\n          />\n\n        </Comment.Group>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedChat);\n","import React, { Fragment } from 'react';\nimport { Segment, List, Item, Label, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IAttendee } from '../../../app/models/activity';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps {\n  attendees: IAttendee[];\n}\n\nconst ActivityDetailedSidebar: React.FC<IProps> = ({ attendees }) => {\n  return (\n    <Fragment>\n      <Segment\n        textAlign='center'\n        style={{ border: 'none' }}\n        attached='top'\n        secondary\n        inverted\n        color='teal'\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map(attendee => (\n            <Item key={attendee.username} style={{ position: 'relative' }}>\n              {attendee.isHost && (\n                <Label\n                  style={{ position: 'absolute' }}\n                  color='orange'\n                  ribbon='right'\n                >\n                  Host\n                </Label>\n              )}\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Item.Header as='h3'>\n                  <Link to={`/profile/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following &&\n                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedSidebar);\n","import React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { activity, loadActivity, loadingInitial } = rootStore.activityStore;\n\n  useEffect(() => {\n    loadActivity(match.params.id);\n  }, [loadActivity, match.params.id, history]);\n\n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />;\n\n  if (!activity) return <h2>Activity not found</h2>;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar attendees={activity.attendees} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React from 'react';\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere but couldn't find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to Activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    );\n};\n\nexport default NotFound;","import React, { useContext } from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ModalContainer = () => {\n    const rootStore = useContext(RootStoreContext);\n    const {modal: {open, body}, closeModal} = rootStore.modalStore;\n  return (\n    <Modal open={open} onClose={closeModal} size='mini'>\n      <Modal.Content>{body}</Modal.Content>\n    </Modal>\n  );\n};\n\nexport default observer(ModalContainer);\n","import React from 'react';\nimport {\n  Segment,\n  Item,\n  Header,\n  Button,\n  Grid,\n  Statistic,\n  Divider,\n  Reveal\n} from 'semantic-ui-react';\nimport { IProfile } from '../../app/models/profile';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps {\n  profile: IProfile;\n  isCurrentUser: boolean;\n  loading: boolean;\n  follow: (username: string) => void;\n  unfollow: (username: string) => void;\n}\n\nconst ProfileHeader: React.FC<IProps> = ({\n  profile,\n  isCurrentUser,\n  loading,\n  follow,\n  unfollow\n}) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size='small'\n                src={profile.image || '/assets/user.png'}\n              />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1'>{profile.displayName}</Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          {!isCurrentUser && (\n            <Reveal animated='move'>\n              <Reveal.Content visible style={{ width: '100%' }}>\n                <Button\n                  fluid\n                  color='teal'\n                  content={profile.following ? 'Following' : 'Not following'}\n                />\n              </Reveal.Content>\n              <Reveal.Content hidden>\n                <Button\n                  loading={loading}\n                  fluid\n                  basic\n                  color={profile.following ? 'red' : 'green'}\n                  content={profile.following ? 'Unfollow' : 'Follow'}\n                  onClick={\n                    profile.following\n                      ? () => unfollow(profile.username)\n                      : () => follow(profile.username)\n                  }\n                />\n              </Reveal.Content>\n            </Reveal>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Icon, Header } from 'semantic-ui-react';\n\ninterface IProps {\n  setFiles: (files: object[]) => void;\n}\n\nconst dropzoneStyles = {\n  border: 'dashed 3px',\n  borderColor: '#eee',\n  borderRadius: '5px',\n  paddingTop: '30px',\n  textAlign: 'center' as 'center',\n  height: '200px'\n};\n\nconst dropzoneActive = {\n  borderColor: 'green'\n};\n\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(\n      acceptedFiles.map((file: object) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      )\n    );\n  }, [setFiles]);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\n      }\n    >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  );\n};\n\nexport default PhotoWidgetDropzone;\n","import React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface IProps {\n  setImage: (file: Blob) => void;\n  imagePreview: string;\n}\n\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\n  const cropper = useRef<Cropper>(null);\n\n  const cropImage = () => {\n    if (\n      cropper.current &&\n      typeof cropper.current.getCroppedCanvas() === 'undefined'\n    ) {\n      return;\n    }\n    cropper &&\n      cropper.current &&\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\n        setImage(blob);\n      }, 'image/jpeg');\n  };\n\n  return (\n    <Cropper\n      ref={cropper}\n      src={imagePreview}\n      style={{ height: 200, width: '100%' }}\n      // Cropper.js options\n      aspectRatio={1 / 1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      dragMode='move'\n      scalable={true}\n      cropBoxMovable={true}\n      cropBoxResizable={true}\n      crop={cropImage}\n    />\n  );\n};\n\nexport default PhotoWidgetCropper;","import React, { Fragment, useState, useEffect } from 'react';\nimport { Header, Grid, Button } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\n\ninterface IProps {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nconst PhotoUploadWidget: React.FC<IProps> = ({ loading, uploadPhoto }) => {\n  const [files, setFiles] = useState<any[]>([]);\n  const [image, setImage] = useState<Blob | null>(null);\n\n  useEffect(() => {\n    return () => {\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    };\n  });\n\n  return (\n    <Fragment>\n      <Grid>\n        <Grid.Column width={4}>\n          <Header color='teal' sub content='Step 1 - Add Photo' />\n          <PhotoWidgetDropzone setFiles={setFiles} />\n        </Grid.Column>\n        <Grid.Column width={1} />\n        <Grid.Column width={4}>\n          <Header sub color='teal' content='Step 2 - Resize image' />\n          {files.length > 0 && (\n            <PhotoWidgetCropper\n              setImage={setImage}\n              imagePreview={files[0].preview}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={1} />\n        <Grid.Column width={4}>\n          <Header sub color='teal' content='Step 3 - Preview & Upload' />\n          {files.length > 0 && (\n            <Fragment>\n              <div\n                className='img-preview'\n                style={{ minHeight: '200px', overflow: 'hidden' }}\n              />\n              <Button.Group widths={2}>\n                <Button\n                  positive\n                  icon='check'\n                  loading={loading}\n                  onClick={() => uploadPhoto(image!)}\n                />\n                <Button\n                  icon='close'\n                  disabled={loading}\n                  onClick={() => setFiles([])}\n                />\n              </Button.Group>\n            </Fragment>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default observer(PhotoUploadWidget);\n","import React, { useContext, useState } from 'react';\nimport { Tab, Header, Card, Image, Button, Grid } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport PhotoUploadWidget from '../../app/common/photoUpload/PhotoUploadWidget';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    isCurrentUser,\n    uploadPhoto,\n    uploadingPhoto,\n    setMainPhoto,\n    deletePhoto,\n    loading\n  } = rootStore.profileStore;\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState<string | undefined>(undefined);\n  const [deleteTarget, setDeleteTarget] = useState<string | undefined>(\n    undefined\n  );\n\n  const handleUploadImage = (photo: Blob) => {\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\n  };\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\n          <Header floated='left' icon='image' content='Photos' />\n          {isCurrentUser && (\n            <Button\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n              floated='right'\n              basic\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handleUploadImage}\n              loading={uploadingPhoto}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile &&\n                profile.photos.map(photo => (\n                  <Card key={photo.id}>\n                    <Image src={photo.url} />\n                    {isCurrentUser && (\n                      <Button.Group fluid widths={2}>\n                        <Button\n                          onClick={e => {\n                            setMainPhoto(photo);\n                            setTarget(e.currentTarget.name);\n                          }}\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          loading={loading && target === photo.id}\n                          basic\n                          positive\n                          content='Main'\n                        />\n                        <Button\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          onClick={(e) => {\n                            deletePhoto(photo);\n                            setDeleteTarget(e.currentTarget.name)\n                          }}\n                          loading={loading && deleteTarget === photo.id}\n                          basic\n                          negative\n                          icon='trash'\n                        />\n                      </Button.Group>\n                    )}\n                  </Card>\n                ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import React from 'react';\nimport { IProfile } from '../../app/models/profile';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { observer } from 'mobx-react-lite';\nimport { combineValidators, isRequired } from 'revalidate';\nimport { Form, Button } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport TextAreaInput from '../../app/common/form/TextAreaInput';\n\nconst validate = combineValidators({\n  displayName: isRequired('displayName')\n});\n\ninterface IProps {\n  updateProfile: (profile: Partial<IProfile>) => void;\n  profile: IProfile;\n}\n\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\n  return (\n    <FinalForm\n      onSubmit={updateProfile}\n      validate={validate}\n      initialValues={profile!}\n      render={({ handleSubmit, invalid, pristine, submitting }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Field\n            name='displayName'\n            component={TextInput}\n            placeholder='Display Name'\n            value={profile!.displayName}\n          />\n          <Field\n            name='bio'\n            component={TextAreaInput}\n            rows={3}\n            placeholder='Bio'\n            value={profile!.bio}\n          />\n          <Button \n            loading={submitting}\n            floated='right'\n            disabled={invalid || pristine}\n            positive\n            content='Update profile'\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default observer(ProfileEditForm);\n","import React, { useContext, useState } from 'react';\nimport { Tab, Grid, Header, Button } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileEditForm from './ProfileEditForm';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfileDescription = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { updateProfile, profile, isCurrentUser } = rootStore.profileStore;\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={`About ${profile!.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {editMode ? (\n            <ProfileEditForm updateProfile={updateProfile} profile={profile!} />\n          ) : (\n            <span>{profile!.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileDescription);\n","import React from 'react';\nimport { Card, Image, Icon} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IProfile } from '../../app/models/profile';\n\ninterface IProps {\n    profile: IProfile\n}\n\nconst ProfileCard: React.FC<IProps> = ({profile}) => {\n  return (\n    <Card as={Link} to={`/profile/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <div>\n          <Icon name='user' />\n          {profile.followersCount} Followers\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ProfileCard;\n","import React, { useContext } from 'react';\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    followings,\n    loading,\n    activeTab\n  } = rootStore.profileStore;\n\n  return (\n    <Tab.Pane loading={loading}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile!.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={5}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default ProfileFollowings;\n","import React, { useEffect, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IUserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { RootStoreContext } from '../../app/stores/rootStore';\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\n];\n\nconst ProfileEvents = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities\n  } = rootStore.profileStore!;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    data: TabProps\n  ) => {\n    let predicate;\n    switch (data.activeIndex) {\n      case 1:\n        predicate = 'past';\n        break;\n      case 2:\n        predicate = 'hosting';\n        break;\n      default:\n        predicate = 'future';\n        break;\n    }\n    loadUserActivities(profile!.username, predicate);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: IUserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileEvents);","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport ProfilePhotos from './ProfilePhotos';\nimport ProfileDescription from './ProfileDescription';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfileActivities from './ProfileActivities';\n\nconst panes = [\n  { menuItem: 'About', render: () => <ProfileDescription /> },\n  { menuItem: 'Photos', render: () => <ProfilePhotos /> },\n  {\n    menuItem: 'Activities',\n    render: () => <ProfileActivities />\n  },\n  { menuItem: 'Followers', render: () => <ProfileFollowings /> },\n  { menuItem: 'Following', render: () => <ProfileFollowings /> }\n];\n\ninterface IProps {\n    setActiveTab: (activeIndex: any) => void;\n}\n\nconst ProfileContent: React.FC<IProps> = ({setActiveTab}) => {\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)}\n    />\n  );\n};\n\nexport default ProfileContent;\n","import React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\nimport { RouteComponentProps } from 'react-router';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { observer } from 'mobx-react-lite';\n\ninterface RouteParams {\n  username: string;\n}\n\ninterface IProps extends RouteComponentProps<RouteParams> {}\n\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadingProfile,\n    profile,\n    loadProfile,\n    follow,\n    unfollow,\n    isCurrentUser,\n    loading,\n    setActiveTab\n  } = rootStore.profileStore;\n\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        <ProfileHeader\n          profile={profile!}\n          isCurrentUser={isCurrentUser}\n          loading={loading}\n          follow={follow}\n          unfollow={unfollow}\n        />\n        <ProfileContent setActiveTab={setActiveTab} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);\n","import React, { useContext } from 'react'\nimport { RouteProps, RouteComponentProps, Route, Redirect } from 'react-router-dom';\nimport { RootStoreContext } from '../stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>>\n}\n\nconst PrivateRoute: React.FC<IProps> = ({component: Component, ...rest}) => {\n    const rootStore = useContext(RootStoreContext);\n    const {isLoggedIn} = rootStore.userStore;\n    return (\n        <Route \n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/' />}\n        />\n    )\n}\n\nexport default observer(PrivateRoute)\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from '../../features/nav/NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport {\n  Route,\n  withRouter,\n  RouteComponentProps,\n  Switch\n} from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport NotFound from './NotFound';\nimport {ToastContainer} from 'react-toastify';\nimport { RootStoreContext } from '../stores/rootStore';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded())\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token])\n\n  if (!appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <Fragment>\n      <ModalContainer />\n      <ToastContainer position='bottom-right' />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  path={['/createActivity', '/manage/:id']}\n                  component={ActivityForm}\n                />\n                <PrivateRoute path='/profile/:username' component={ProfilePage} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, [pathname]);\n  \n    return children || null;\n  };\n  \n  export default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport ScrollToTop from './app/layout/ScrollToTop';\nimport dateFnsLocalizer from 'react-widgets-date-fns';\n\ndateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}